<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.dippy</groupId>
    <artifactId>springboot-secondcar</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>springboot-secondcar</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
        <!--mybatis-plus-->
        <mybatis-plus.version>3.4.1</mybatis-plus.version>
        <!--mybatis-plus-generator-->
        <mybatis-plus-generator>3.4.1</mybatis-plus-generator>
        <!--knife4j的版本-->
        <knife4j.version>2.0.4</knife4j.version>
        <!--swagger-->
        <swagger.version>2.7.0</swagger.version>
        <!--jwt-->
        <jwt.version>0.9.1</jwt.version>
        <!--hutool-->
        <hutool.version>5.3.3</hutool.version>
        <!--validation-->
        <validation.version>2.3.4.RELEASE</validation.version>
        <!--kaptcha-->
        <kaptcha.version>2.3.2</kaptcha.version>
        <!--social-->
        <social.version>1.1.6.RELEASE</social.version>
        <!-- pagehelper 分页依赖 -->
        <pagehelper.version>1.3.0</pagehelper.version>
        <!--    elasticsearch-->
        <elasticsearch.version>7.10.1</elasticsearch.version>
        <!--七牛云-->
        <qiniuyun.version>7.3.0</qiniuyun.version>
        <!--支付宝-->
        <alipay.version>4.10.97.ALL</alipay.version>

        <!--生成数据库文档-->
        <screw.version>1.0.3</screw.version>
        <HikariCP.version>3.4.5</HikariCP.version>
        <!--生成数据库文档-->

    </properties>


    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <!--<exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>-->
        </dependency>
        <!--  <dependency>
              <groupId> org.springframework.boot </groupId>
              <artifactId> spring-boot-starter-log4j </artifactId>
              <version>1.1.10.RELEASE</version>
          </dependency>-->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!--redis-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <!--security-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!--mp-->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>${mybatis-plus.version}</version>
        </dependency>
        <!--mp代码生成器-->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-generator</artifactId>
            <version>${mybatis-plus-generator}</version>
        </dependency>
        <!--velocity-->
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity-engine-core</artifactId>
            <version>2.2</version>
        </dependency>
        <!--freemarker-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>
        <!-- hutool工具类-->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutool.version}</version>
        </dependency>
        <!--swagger2-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>${swagger.version}</version>
        </dependency>
        <!--swagger-ui-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${swagger.version}</version>
        </dependency>
        <!--knife4j-->
        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>knife4j-spring-boot-starter</artifactId>
            <version>${knife4j.version}</version>
        </dependency>
        <!-- jwt -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>${jwt.version}</version>
        </dependency>
        <!--validation-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
            <version>${validation.version}</version>
        </dependency>
        <!-- 验证码 -->
        <dependency>
            <groupId>com.github.penggle</groupId>
            <artifactId>kaptcha</artifactId>
            <version>${kaptcha.version}</version>
        </dependency>
        <!--commons-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
        </dependency>
        <!--social-->
        <dependency>
            <groupId>org.springframework.social</groupId>
            <artifactId>spring-social-config</artifactId>
            <version>${social.version}</version>
        </dependency>
        <!-- pagehelper 分页依赖 -->
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
            <version>${pagehelper.version}</version>
        </dependency>

        <!--es-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
        </dependency>
        <!--<dependency>-->
        <!--    <groupId>org.elasticsearch.client</groupId>-->
        <!--    <artifactId>elasticsearch-rest-high-level-client</artifactId>-->
        <!--    <version>${elasticsearch.version}</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--    <groupId>org.elasticsearch</groupId>-->
        <!--    <artifactId>elasticsearch</artifactId>-->
        <!--    <version>${elasticsearch.version}</version>-->
        <!--</dependency>-->

        <!--<dependency>-->
        <!--    <groupId>com.bbossgroups.plugins</groupId>-->
        <!--    <artifactId>bboss-elasticsearch-rest-jdbc</artifactId>-->
        <!--    <version>6.2.8</version>-->
        <!--</dependency>-->


        <!-- sql分析器 -->
        <dependency>
            <groupId>p6spy</groupId>
            <artifactId>p6spy</artifactId>
            <version>3.8.6</version>
        </dependency>

        <!--整合rabbitmq-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>

        <!--七牛云-->
        <dependency>
            <groupId>com.qiniu</groupId>
            <artifactId>qiniu-java-sdk</artifactId>
            <version>${qiniuyun.version}</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>3.14.2</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.5</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.qiniu</groupId>
            <artifactId>happy-dns-java</artifactId>
            <version>0.1.6</version>
            <scope>test</scope>
        </dependency>

        <!--支付宝-->
        <dependency>
            <groupId>com.alipay.sdk</groupId>
            <artifactId>alipay-sdk-java</artifactId>
            <version>${alipay.version}</version>
        </dependency>


        <!--websocket-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>


        <!-- 导入配置文件处理器，配置文件进行绑定就会有提示，需要重启 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <!--aop-->
        <!-- https://mvnrepository.com/artifact/org.aspectj/aspectjrt -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>1.9.6</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>1.9.6</version>
        </dependency>


        <!--生成数据库文档-->
        <!-- screw核心 -->
        <dependency>
            <groupId>cn.smallbun.screw</groupId>
            <artifactId>screw-core</artifactId>
            <version>${screw.version}</version>
        </dependency>

        <!-- HikariCP -->
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>${HikariCP.version}</version>
        </dependency>
        <!--生成数据库文档-->

        <!-- fastjson   -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>2.0.25</version>
        </dependency>

        <!-- iText -->
        <!-- iText 7 布局模块 -->
        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>layout</artifactId>
            <version>7.1.15</version>
        </dependency>

        <!-- iText 7 表单模块 -->
        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>forms</artifactId>
            <version>7.1.15</version>
        </dependency>

        <!-- iText 7 字体模块 -->
        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>font-asian</artifactId>
            <version>7.1.15</version>
        </dependency>
        <!-- Apache PDFBox -->
        <dependency>
            <groupId>org.apache.pdfbox</groupId>
            <artifactId>pdfbox</artifactId>
            <version>2.0.24</version>
        </dependency>

        <!-- Apache POI -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>5.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>5.0.0</version>
        </dependency>

        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.17.2</version>
        </dependency>

        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>itextpdf</artifactId>
            <version>5.5.13.1</version>
        </dependency>
        <!--<dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>itext7-core</artifactId>
            <version>7.2.4</version>
        </dependency>-->
        <dependency>
            <groupId>org.apache.pdfbox</groupId>
            <artifactId>pdfbox</artifactId>
            <version>2.0.19</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>itext-asian</artifactId>
            <version>5.2.0</version>
        </dependency>


        <!--扁平化-->
        <dependency>
            <groupId>com.github.wnameless.json</groupId>
            <artifactId>json-flattener</artifactId>
            <version>0.16.4</version>
        </dependency>


    </dependencies>

    <build>
        <plugins>
            <!--            <plugin>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-maven-plugin</artifactId>
                            <configuration>
                                <skip>true</skip>
                                &lt;!&ndash; main方法的地址 只需要修改这个地址&ndash;&gt;
                                <mainClass>com.dippy.SpringbootSecondcarApplication</mainClass>
                            </configuration>
                        </plugin>-->

            <!-- surefire插件,设定自动测试忽略integration 目录下的集成测试用例 jar和依赖一起-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

            <!--jdk配置-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <!--jar和依赖分开  start-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <!-- 指定该jar包启动时的主类[建议] -->
                    <mainClass>com.dippy.SpringbootSecondcarApplication</mainClass>
                    <includes>
                        <include>
                            <groupId>nothing</groupId>
                            <artifactId>nothing</artifactId>
                        </include>
                    </includes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <!-- 剔除spring-boot打包的org和BOOT-INF文件夹(用于子模块打包) -->
                    <skip>true</skip>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${project.build.directory}/lib
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>com.dippy.SpringbootSecondcarApplication</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>


            <!--docker jenkins 自动化安装   start-->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.0.0</version>
                <configuration>
                    <imageName>${project.artifactId}:${project.version}</imageName>
                    <baseImage>alpine-3.8.0-docker-image:2.0</baseImage>
                    <dockerHost>http://47.98.130.198:8090</dockerHost>
                    <maintainer>author author@email.com</maintainer>
                    <workdir>/var/jenkins_home/workspace/seconder/</workdir>
                    <cmd>["java", "-version"]</cmd>
                    <entryPoint>["java", "-jar", "${project.build.finalName}.jar"]</entryPoint>
                    <!-- 这里是复制 jar 包到 docker 容器指定目录配置 -->
                    <resources>
                        <resource>
                            <targetPath>/var/jenkins_home/workspace/seconder/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
            <!--docker jenkins 自动化安装   end-->

            <!--以下为生成数据库文档-->
            <!--<plugin>
                <groupId>cn.smallbun.screw</groupId>
                <artifactId>screw-maven-plugin</artifactId>
                <version>1.0.3</version>
                <dependencies>
                    &lt;!&ndash; HikariCP &ndash;&gt;
                    <dependency>
                        <groupId>com.zaxxer</groupId>
                        <artifactId>HikariCP</artifactId>
                        <version>3.4.5</version>
                    </dependency>
                    &lt;!&ndash;mysql driver&ndash;&gt;
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>8.0.20</version>
                    </dependency>
                </dependencies>
                <configuration>
                    &lt;!&ndash;username&ndash;&gt;
                    <username>root</username>
                    &lt;!&ndash;password&ndash;&gt;
                    <password>612345</password>
                    &lt;!&ndash;driver&ndash;&gt;
                    <driverClassName>com.mysql.cj.jdbc.Driver</driverClassName>
                    &lt;!&ndash;jdbc url&ndash;&gt;
                    <jdbcUrl>jdbc:mysql://localhost:3307/second_car?serverTimezone=UTC</jdbcUrl>
                    &lt;!&ndash;生成文件类型&ndash;&gt;
                    <fileType>WORD</fileType>
                    &lt;!&ndash;打开文件输出目录&ndash;&gt;
                    <openOutputDir>true</openOutputDir>
                    &lt;!&ndash;生成模板&ndash;&gt;
                    <produceType>freemarker</produceType>
                    &lt;!&ndash;文档名称 为空时:将采用[数据库名称-描述-版本号]作为文档名称&ndash;&gt;
                    &lt;!&ndash;<docName>测试文档名称</docName>&ndash;&gt;
                    &lt;!&ndash;描述&ndash;&gt;
                    <description>数据库文档生成</description>
                    &lt;!&ndash;版本&ndash;&gt;
                    <version>${project.version}</version>
                    &lt;!&ndash;文件名标题&ndash;&gt;
                    <title>数据库文档</title>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>-->
            <!--以上为生成数据库文档-->
        </plugins>

        <!--
            自动生成启动脚本 可用方式1
            ./target/generated-resources/appassembler/jsw/springboot-secondcar/bin/springboot-secondcar
        -->
        <!--<plugins>
            <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>appassembler-maven-plugin</artifactId>
            <version>2.1.0</version>
            <executions>
                <execution>
                    <id>generate-jsw-scripts</id>
                    <phase>package</phase>
                    <goals>
                        <goal>generate-daemons</goal>
                    </goals>
                </execution>
            </executions>

            <configuration>
                &lt;!&ndash; 打包的jar，以及maven依赖的jar放到这个目录里面 &ndash;&gt;
                <repositoryName>lib</repositoryName>
                &lt;!&ndash; 可执行脚本的目录 &ndash;&gt;
                <binFolder>bin</binFolder>
                &lt;!&ndash; 配置文件的目标目录 &ndash;&gt;
                <configurationDirectory>conf</configurationDirectory>
                &lt;!&ndash; 拷贝配置文件到上面的目录中 &ndash;&gt;
                <copyConfigurationDirectory>true</copyConfigurationDirectory>
                &lt;!&ndash; 从哪里拷贝配置文件 (默认src/main/config) &ndash;&gt;
                <configurationSourceDirectory>src/main/resources</configurationSourceDirectory>
                &lt;!&ndash; lib目录中jar的存放规则，默认是${groupId}/${artifactId}的目录格式，flat表示直接把jar放到lib目录 &ndash;&gt;
                <repositoryLayout>flat</repositoryLayout>
                <encoding>UTF-8</encoding>
                <logsDirectory>logs</logsDirectory>
                <daemons>
                    <daemon>
                        <id>${name}</id>
                        <mainClass>StartApplication</mainClass>
                        <platforms>
                            <platform>jsw</platform>
                        </platforms>
                        <generatorConfigurations>
                            <generatorConfiguration>
                                <generator>jsw</generator>
                                <includes>
                                    <include>linux-x86-32</include>
                                    <include>linux-x86-64</include>
                                    <include>windows-x86-32</include>
                                    <include>windows-x86-64</include>
                                </includes>
                                <configuration>
                                    <property>
                                        <name>configuration.directory.in.classpath.first</name>
                                        <value>conf</value>
                                    </property>
                                    <property>
                                        <name>wrapper.ping.timeout</name>
                                        <value>120</value>
                                    </property>
                                    <property>
                                        <name>set.default.REPO_DIR</name>
                                        <value>lib</value>
                                    </property>
                                    <property>
                                        <name>wrapper.logfile</name>
                                        <value>logs/wrapper.log</value>
                                    </property>
                                </configuration>
                            </generatorConfiguration>
                        </generatorConfigurations>
                        <jvmSettings>
                            &lt;!&ndash; jvm参数 &ndash;&gt;
                            <systemProperties>
                                <systemProperty>com.sun.management.jmxremote</systemProperty>
                                <systemProperty>com.sun.management.jmxremote.port=1984</systemProperty>
                                <systemProperty>com.sun.management.jmxremote.authenticate=false</systemProperty>
                                <systemProperty>com.sun.management.jmxremote.ssl=false</systemProperty>
                                <systemProperty>skywalking.agent.service_name=${name}</systemProperty>
                                <systemProperty>skywalking.collector.backend_service=172.16.60.146:11800</systemProperty>
                            </systemProperties>
                            <extraArguments>
                                <extraArgument>-server</extraArgument>
                                <extraArgument>-javaagent:/opt/agent/skywalking-agent.jar </extraArgument>
                                <extraArgument>-XX:+PrintGCDetails</extraArgument>&lt;!&ndash;输出GC的详细日志&ndash;&gt;
                                <extraArgument>-XX:+PrintGCDateStamps</extraArgument>&lt;!&ndash;输出GC的时间戳&ndash;&gt;
                                <extraArgument>-Xloggc:logs/gc.log</extraArgument>&lt;!&ndash;日志文件的输出路径&ndash;&gt;
                            </extraArguments>
                        </jvmSettings>
                    </daemon>
                </daemons>
            </configuration>
        </plugin>
        </plugins>-->

        <!--使用assembly自动生成启动脚本 可用方式1-->
        <!--<plugins>
            &lt;!&ndash; compiler &ndash;&gt;
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            &lt;!&ndash;jar plugin &ndash;&gt;
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <addMavenDescriptor>true</addMavenDescriptor>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            &lt;!&ndash;<mainClass></mainClass>&ndash;&gt;
                        </manifest>
                    </archive>
                    <excludes>
                        &lt;!&ndash;<exclude></exclude>&ndash;&gt;
                    </excludes>
                </configuration>
            </plugin>
            &lt;!&ndash;assembly plugin &ndash;&gt;
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <descriptors>
                        <descriptor>${project.basedir}\src\main\assembly\assembly.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>-->


        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
                <!--是否替换资源中的属性-->
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>
    </build>

</project>
